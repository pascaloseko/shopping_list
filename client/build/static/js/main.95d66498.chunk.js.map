{"version":3,"sources":["flux/actions/errorActions.ts","flux/actions/types.ts","flux/actions/authActions.ts","components/auth/RegisterModal.tsx","components/auth/LoginModal.tsx","components/auth/Logout.tsx","components/AppNavbar.tsx","flux/actions/itemActions.ts","components/ShoppingList.tsx","components/ItemModal.tsx","flux/reducers/authReducer.ts","flux/reducers/errorReducer.ts","flux/reducers/itemReducer.ts","flux/reducers/index.ts","flux/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["returnErrors","msg","status","type","payload","id","arguments","length","undefined","clearErrors","tokenConfig","getState","token","auth","config","headers","Content-type","typedToken","connect","state","isAuthenticated","error","register","_ref","name","email","password","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","data","catch","err","response","_useState","useState","_useState2","_slicedToArray","modal","setModal","_useState3","_useState4","setName","_useState5","_useState6","setEmail","_useState7","_useState8","setPassword","_useState9","_useState10","setMsg","handleToggle","useCallback","useEffect","React","createElement","NavLink","onClick","href","Modal","isOpen","toggle","ModalHeader","ModalBody","Alert","color","Form","onSubmit","e","preventDefault","FormGroup","Label","for","Input","placeholder","className","onChange","target","value","Button","style","marginTop","block","login","_ref2","logout","Fragment","setIsOpen","authLinks","NavItem","user","concat","Logout","guestLinks","RegisterModal","LoginModal","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemsLoading","item","getItems","get","deleteItem","console","info","delete","items","ListGroup","TransitionGroup","map","CSSTransition","key","timeout","classNames","ListGroupItem","size","handleDelete","addItem","marginBottom","initialState","localStorage","getItem","isLoading","loading","combineReducers","action","_objectSpread","products","filter","_toConsumableArray","message","staus","setItem","removeItem","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","apply","App","Provider","AppNavbar","ItemModal","ShoppingList","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95d66498.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\nimport { IMsg } from '../../types/interfaces';\n\n// RETURN ERRORS\nexport const returnErrors = (msg: IMsg, status: number, id: any = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import axios from \"axios\";\nimport { returnErrors } from \"./errorActions\";\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"./types\";\nimport { IAuthFunction, IConfigHeaders } from \"../../types/interfaces\";\n\n// Register User\nexport const register = ({ name, email, password }: IAuthFunction) => (\n  dispatch: Function\n) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/public/signup\", body, config)\n    .then((res) =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      })\n    )\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }: IAuthFunction) => (\n  dispatch: Function\n) => {\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/public/login\", body, config)\n    .then((res) => \n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      })\n    )\n    .catch((err) => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = (getState: Function) => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config: IConfigHeaders = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token !== \"\") {\n    const typedToken = 'Bearer ' + token\n    config.headers[\"Authorization\"] = typedToken;\n  }\n\n  return config;\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { register } from '../../flux/actions/authActions';\nimport { clearErrors } from '../../flux/actions/errorActions';\nimport {\n    IRegisterModal,\n    ITarget,\n    IAuthReduxProps\n} from '../../types/interfaces';\n\nconst RegisterModal = ({\n    isAuthenticated,\n    error,\n    register,\n    clearErrors\n}: IRegisterModal) => {\n    const [modal, setModal] = useState(false);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [msg, setMsg] = useState(null);\n\n    const handleToggle = useCallback(() => {\n        // Clear errors\n        clearErrors();\n        setModal(!modal);\n    }, [clearErrors, modal]);\n\n    const handleChangeName = (e: ITarget) => setName(e.target.value);\n    const handleChangeEmail = (e: ITarget) => setEmail(e.target.value);\n    const handleChangePassword = (e: ITarget) => setPassword(e.target.value);\n\n    const handleOnSubmit = (e: any) => {\n        e.preventDefault();\n\n        // Create user object\n        const user = {\n            name,\n            email,\n            password\n        };\n\n        // Attempt to login\n        register(user);\n    };\n\n    useEffect(() => {\n        // Check for register error\n        if (error.id === 'REGISTER_FAIL') {\n            setMsg(error.msg.msg);\n        } else {\n            setMsg(null);\n        }\n\n        // If authenticated, close modal\n        if (modal) {\n            if (isAuthenticated) {\n                handleToggle();\n            }\n        }\n    }, [error, handleToggle, isAuthenticated, modal]);\n\n    return (\n        <div>\n            <NavLink onClick={handleToggle} href=\"#\">\n                Register\n      </NavLink>\n\n            <Modal isOpen={modal} toggle={handleToggle}>\n                <ModalHeader toggle={handleToggle}>Register</ModalHeader>\n                <ModalBody>\n                    {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    <Form onSubmit={handleOnSubmit}>\n                        <FormGroup>\n                            <Label for=\"name\">Name</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"name\"\n                                placeholder=\"Name\"\n                                className=\"mb-3\"\n                                onChange={handleChangeName}\n                            />\n\n                            <Label for=\"email\">Email</Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                className=\"mb-3\"\n                                onChange={handleChangeEmail}\n                            />\n\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                className=\"mb-3\"\n                                onChange={handleChangePassword}\n                            />\n                            <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                                Register\n              </Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: IAuthReduxProps) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(mapStateToProps, { register, clearErrors })(\n    RegisterModal\n);","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { login } from '../../flux/actions/authActions';\nimport { clearErrors } from '../../flux/actions/errorActions';\nimport { ILoginModal, ITarget, IAuthReduxProps } from '../../types/interfaces';\n\nconst LoginModal = ({\n    isAuthenticated,\n    error,\n    login,\n    clearErrors\n}: ILoginModal) => {\n    const [modal, setModal] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [msg, setMsg] = useState(null);\n\n    const handleToggle = useCallback(() => {\n        // Clear errors\n        clearErrors();\n        setModal(!modal);\n    }, [clearErrors, modal]);\n\n    const handleChangeEmail = (e: ITarget) => setEmail(e.target.value);\n    const handleChangePassword = (e: ITarget) => setPassword(e.target.value);\n\n    const handleOnSubmit = (e: any) => {\n        e.preventDefault();\n\n        const user = { email, password };\n\n        // Attempt to login\n        login(user);\n    };\n\n    useEffect(() => {\n        // Check for register error\n        if (error.id === 'LOGIN_FAIL') {\n            setMsg(error.msg.msg);\n        } else {\n            setMsg(null);\n        }\n\n        // If authenticated, close modal\n        if (modal) {\n            if (isAuthenticated) {\n                handleToggle();\n            }\n        }\n    }, [error, handleToggle, isAuthenticated, modal]);\n\n    return (\n        <div>\n            <NavLink onClick={handleToggle} href=\"#\">\n                Login\n      </NavLink>\n\n            <Modal isOpen={modal} toggle={handleToggle}>\n                <ModalHeader toggle={handleToggle}>Login</ModalHeader>\n                <ModalBody>\n                    {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email\"\n                                className=\"mb-3\"\n                                onChange={handleChangeEmail}\n                            />\n\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                className=\"mb-3\"\n                                onChange={handleChangePassword}\n                            />\n                            <Button\n                                color=\"dark\"\n                                style={{ marginTop: '2rem' }}\n                                block\n                                onClick={handleOnSubmit}\n                            >\n                                Login\n              </Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: IAuthReduxProps) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);","import React, { Fragment } from 'react';\nimport { NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { logout } from '../../flux/actions/authActions';\nimport { ILogoutProps } from '../../types/interfaces';\n\nexport const Logout = ({ logout }: ILogoutProps) => {\n  return (\n    <Fragment>\n      <NavLink onClick={logout} href=\"#\">\n        Logout\n      </NavLink>\n    </Fragment>\n  );\n};\n\nexport default connect(null, { logout })(Logout);\n","import React, { Fragment, useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport RegisterModal from './auth/RegisterModal';\nimport LoginModal from './auth/LoginModal';\nimport Logout from './auth/Logout';\nimport { IAppNavbar, IAuthReduxProps } from '../types/interfaces';\n\nconst AppNavbar = ({ auth }: IAppNavbar) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => setIsOpen(!isOpen);\n\n  const authLinks = (\n    <Fragment>\n      <NavItem>\n        <span className=\"navbar-text mr-3\">\n          <strong>\n            {auth && auth.user ? `Welcome ${auth.user.name}` : ''}\n          </strong>\n        </span>\n      </NavItem>\n      <NavItem>\n        <Logout />\n      </NavItem>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <NavItem>\n        <RegisterModal />\n      </NavItem>\n      <NavItem>\n        <LoginModal />\n      </NavItem>\n    </Fragment>\n  );\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n        <Container>\n          <NavbarBrand href=\"/\">ShoppingList</NavbarBrand>\n          <NavbarToggler onClick={handleToggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {auth && auth.isAuthenticated ? authLinks : guestLinks}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IAuthReduxProps) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(AppNavbar);","import axios from \"axios\";\nimport { IItem } from \"../../types/interfaces\";\nimport { tokenConfig } from \"./authActions\";\nimport { returnErrors } from \"./errorActions\";\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"./types\";\n\nexport const getItems = () => (\n  dispatch: Function,\n  getState: Function\n  ) => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api\", tokenConfig(getState))\n    .then((res) =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data,\n      })\n    )\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const deleteItem = (id: number) => (\n  dispatch: Function,\n  getState: Function\n  ) => {\n    console.info(id)\n  axios.delete(`/api/${id}`, tokenConfig(getState)).then((res) => {\n    dispatch({\n      type: DELETE_ITEM,\n      payload: id,\n    });\n  });\n};\n\nexport const addItem = (item: IItem) => (\n  dispatch: Function,\n  getState: Function\n  ) => {\n  axios\n    .post(\"/api\", item, tokenConfig(getState))\n    .then((res) => {\n      dispatch({ type: ADD_ITEM, payload: res.data.item });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING,\n  };\n};\n","import React, { useEffect } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'\nimport { getItems, deleteItem } from '../flux/actions/itemActions'\nimport { IItemReduxProps, IShoppingList } from '../types/interfaces'\n\nconst ShoppingList = ({\n    getItems,\n    item,\n    isAuthenticated,\n    deleteItem\n  }: IShoppingList) => {\n    useEffect(() => {\n      getItems();\n    }, [getItems]);\n  \n    const handleDelete = (id: number) => {\n      deleteItem(id);\n    };\n  \n    const { items } = item;\n    return (\n      <Container>\n        <ListGroup>\n          <TransitionGroup className=\"shopping-list\">\n            {items.map(({id, name }) => (\n              <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  {isAuthenticated ? (\n                    <Button\n                      className=\"remove-btn\"\n                      color=\"danger\"\n                      size=\"sm\"\n                      onClick={() => handleDelete(id)}\n                    >\n                      &times;\n                    </Button>\n                  ) : null}\n                  {name}\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  };\n  \n  const mapStateToProps = (state: IItemReduxProps) => ({\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated\n  });\n  \n  export default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList);","import React, { useState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addItem } from '../flux/actions/itemActions';\nimport { IItemReduxProps, IItemModal, ITarget } from '../types/interfaces';\n\nconst ItemModal = ({ isAuthenticated, addItem }: IItemModal) => {\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleToggle = () => setModal(!modal);\n\n  const handleChangeName = (e: ITarget) => setName(e.target.value);\n\n  const handleOnSubmit = (e: any) => {\n    e.preventDefault();\n\n    const newItem = {\n      name\n    };\n\n    // Add item via addItem action\n    addItem(newItem);\n    // Close modal\n    handleToggle();\n  };\n\n  return (\n    <div>\n      {isAuthenticated ? (\n        <Button\n          color=\"dark\"\n          style={{ marginBottom: '2rem' }}\n          onClick={handleToggle}\n        >\n          Add Item\n        </Button>\n      ) : (\n        <h4 className=\"mb-3 ml-4\">Please log in to manage items</h4>\n      )}\n\n      <Modal isOpen={modal} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>Add To Shopping List</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleOnSubmit}>\n            <FormGroup>\n              <Label for=\"item\">Item</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"item\"\n                placeholder=\"Add shopping item\"\n                onChange={handleChangeName}\n              />\n              <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                Add Item\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IItemReduxProps) => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { addItem })(ItemModal);","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.message);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\nimport { IAction } from \"../../types/interfaces\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null,\n};\n\nexport default function (state = initialState, action: IAction) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg.message,\n        status: action.payload.status,\n        id: action.payload.id,\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        staus: null,\n        id: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n} from \"../actions/types\";\nimport { IAction, IItem } from \"../../types/interfaces\";\n\nconst initialState = {\n    items: [],\n  loading: false,\n};\n\ninterface IState {\n  items: IItem[];\n}\n\nexport default function(state: IState = initialState, action: IAction) {\n    switch (action.type) {\n        case GET_ITEMS:\n            return {\n                ...state,\n                items: action.payload.products.items,\n                loading: false\n            }\n\n        case DELETE_ITEM:\n            return {\n                ...state,\n                items: state.items.filter(item => item.id !== action.payload)\n            }\n    \n        case ADD_ITEM:\n            return {\n                ...state,\n                items: [action.payload, ...state.items]\n            }\n\n        case ITEMS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport errorReducer from './errorReducer'\nimport itemReducer from './itemReducer'\n\nexport default combineReducers({\n    item: itemReducer,\n    error: errorReducer,\n    auth: authReducer\n})","import { createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n  }\n  \nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, initialState, compose(\n    composeEnhancers(applyMiddleware(...middleware))\n))\n\nexport default store","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport AppNavbar from './components/AppNavbar'\nimport ShoppingList from './components/ShoppingList'\nimport ItemModal from './components/ItemModal'\n// redux\nimport { Provider } from 'react-redux'\nimport store from './flux/store'\nimport { Container } from 'reactstrap';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <AppNavbar/>\n        <Container>\n          <ItemModal/>\n          <ShoppingList/>\n        </Container>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}